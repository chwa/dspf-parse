// -------------------
// GENERAL DEFINITIONS
// -------------------

space = { " " | "\t" }
// WHITESPACE = _{ space | ( space* ~ NEWLINE ~ "+" ~ space*) }
// we are now doing line continuation before parsing...
WHITESPACE = _{ space  }
COMMENT = _{ !"*|" ~ "*" ~ (!NEWLINE ~ ANY)* }

// generic number (from pest JSON example...)
number = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

// subckt, parameter or model name (more restrictive)
// todo: separate expression for net names with <>
simple_name = @{ (ASCII_ALPHANUMERIC | "_" | "<" | ">")+ }

// net or instance identifier
identifier = @{ (ASCII_ALPHANUMERIC | "_" | "<" | ">" | "@" | "#" | "/")+ }

// ------------------------
// EXTENDED SYNTAX ($ ARGS)
// ------------------------

dollar_item = ${ "$" ~ param_name ~ "=" ~ param_value }
dollar_params = { dollar_item* }
layer_name = @{!dollar_item ~ "$" ~ simple_name}

// ----------------------
// R/C INSTANCE STATEMENT
// ----------------------

primitive_inst_name = @{ ("R" | "C") ~ simple_name }
primitive_nodeA = _{ identifier }
primitive_nodeB = _{ identifier }
primitive_value = _{ number }
primitive_stmt = {
    primitive_inst_name ~
    primitive_nodeA ~
    primitive_nodeB ~
    primitive_value ~
    layer_name? ~
    dollar_params ~
    NEWLINE
}

// ------------------
// INSTANCE STATEMENT
// ------------------

instance_name = _{ identifier }

pinlist_item = { !(instance_model_name ~ (paramlist_item | NEWLINE)) ~ identifier }
instance_pinlist = { pinlist_item+ }

instance_model_name = { param_name }

param_name = _{ simple_name }
param_value  = _{ number | param_name }
paramlist_item = ${ param_name ~ "=" ~ param_value }
instance_param_list = { paramlist_item* }

instance_stmt = {
    instance_name ~
    instance_pinlist ~
    instance_model_name ~
    instance_param_list ~
    NEWLINE
}

// ----------------
// DSPF NET SECTION
// ----------------

dspf_other = { "*|" ~ (!NEWLINE ~ ANY)* ~ NEWLINE}

// TODO: these are very approximative... follow exact definitions in spec

slash_comment = { "//" ~ (!NEWLINE ~ ANY)* }

dspf_net_line = { "*|NET" ~ identifier ~ number ~ NEWLINE }
pin_params = _{ "(" ~ identifier ~ ASCII_ALPHA_UPPER ~ number ~ (number ~ number)? ~ ")" }
dspf_pin_line = { "*|P" ~ pin_params ~ slash_comment? ~ NEWLINE}

instpin_params = _{ "(" ~ identifier ~ identifier ~ identifier ~ ASCII_ALPHA_UPPER ~ number ~ (number ~ number)? ~ ")" }


// *|I (XMnmos<3>#g XMnmos<3> g X 0 -2.40350 1.44000) // $llx=-2.40350 $lly=1.44000 $urx=-2.40350 $ury=1.44000 $lvl=7
dspf_inst_line = { "*|I" ~ instpin_params ~ slash_comment? ~ NEWLINE}

dspf_subnode_line = { "*|S" ~ "(" ~ identifier ~ (number ~ number)? ~ ")" ~ slash_comment? ~ NEWLINE}

dspf_net_section = {
    dspf_net_line ~
    (dspf_pin_line | dspf_inst_line | dspf_subnode_line)*
}

// ----------------
// SUBCKT STATEMENT
// ----------------

pins = { simple_name+ }

subckt_name = { simple_name }

subckt = {
    ".SUBCKT" ~ subckt_name ~ pins ~ NEWLINE ~
    (instance_stmt | primitive_stmt | dspf_net_section | dspf_other | NEWLINE)+ ~
    ".ENDS" ~ NEWLINE
}

file = _{
    SOI ~
    (subckt | dspf_other | NEWLINE)+ ~
    EOI
}

// ---------------
/*
comment = { "*" ~ (!NEWLINE ~ ANY)* }
statement = { (!(NEWLINE | "*" | ".") ~ ANY)+ }

item = _{ statement ~ comment? }
line = _{ (item | comment)? }

subckt = {
    ".SUBCKT" ~ (!NEWLINE ~ ANY)* ~ NEWLINE ~
    (item ~ NEWLINE)+ ~
    ".ENDS"
}

toplevel_stmt = _{ subckt | line }

file = {
    SOI ~
    (toplevel_stmt? ~ NEWLINE)+ ~
    EOI
}

*/